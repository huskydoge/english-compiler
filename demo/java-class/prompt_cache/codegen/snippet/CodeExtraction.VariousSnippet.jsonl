{"prompt":"Extract from the following\n\njava code :\n```\npublic class OAuth2ProviderHelper{private String authorizationURL,scope,tokenURL,redirectURL,clientID,clientSecret,identityURL,identityProperty;public OAuth2ProviderHelper(Map<String,Object> params){this.authorizationURL=(String)params.get(\"authorizationURL\");this.scope=(String)params.get(\"scope\");this.tokenURL=(String)params.get(\"tokenURL\");this.redirectURL=(String)params.get(\"redirectURL\");this.clientID=(String)params.get(\"clientID\");this.clientSecret=(String)params.get(\"clientSecret\");this.identityURL=(String)params.get(\"identityURL\");this.identityProperty=(String)params.get(\"identityProperty\");if(this.identityProperty==null)this.identityProperty=\"email\";}public String getAuthorizationSessionUrl(){try{return this.authorizationURL+\"?client_id=\"+this.clientID+\"&redirect_uri=\"+URLEncoder.encode(this.redirectURL,\"UTF-8\")+\"&scope=\"+this.scope;}catch(UnsupportedEncodingException e){throw new RuntimeException(e);}}public String getValidAccessToken(String code){Map<String,Object> reqParams=new HashMap<String,Object>();reqParams.put(\"code\",code);reqParams.put(\"client_id\",this.clientID);reqParams.put(\"client_secret\",this.clientSecret);reqParams.put(\"redirect_uri\",this.redirectURL);HttpResponse response=RequestHttp.postJSON(this.tokenURL,reqParams);Map<String,Object> resultMap=response.toMap();return (String)resultMap.get(\"access_token\");}public String getIdentity(String token){Map<String,Object> reqParams=new HashMap<String,Object>();Map<String,Object> reqHeaders=new HashMap<String,Object>();reqHeaders.put(\"Authorization\",\"Bearer \"+token);HttpResponse response=RequestHttp.postJSON(this.identityURL,reqParams,null,reqHeaders);Map<String,Object> resultMap=response.toMap();return (String)resultMap.get(this.identityProperty);}}\n```\n\nThe Package namespace (if any), and all the dependencies declarations (if any), return only as package and import statements\n\n```\n","completion":"package OAuth2ProviderHelper;\n\nimport java.io.UnsupportedEncodingException;\nimport java.net.URLEncoder;\nimport java.util.HashMap;\nimport java.util.Map;\n``"}
{"prompt":"Extract from the following\n\njava code :\n```\npublic class OAuth2ProviderHelper{private String authorizationURL,scope,tokenURL,redirectURL,clientID,clientSecret,identityURL,identityProperty;public OAuth2ProviderHelper(Map<String,Object> params){this.authorizationURL=(String)params.get(\"authorizationURL\");this.scope=(String)params.get(\"scope\");this.tokenURL=(String)params.get(\"tokenURL\");this.redirectURL=(String)params.get(\"redirectURL\");this.clientID=(String)params.get(\"clientID\");this.clientSecret=(String)params.get(\"clientSecret\");this.identityURL=(String)params.get(\"identityURL\");this.identityProperty=(String)params.get(\"identityProperty\");if(this.identityProperty==null)this.identityProperty=\"email\";}public String getAuthorizationSessionUrl(){try{return this.authorizationURL+\"?client_id=\"+this.clientID+\"&redirect_uri=\"+URLEncoder.encode(this.redirectURL,\"UTF-8\")+\"&scope=\"+this.scope;}catch(UnsupportedEncodingException e){throw new RuntimeException(e);}}public String getValidAccessToken(String code){Map<String,Object> reqParams=new HashMap<String,Object>();reqParams.put(\"code\",code);reqParams.put(\"client_id\",this.clientID);reqParams.put(\"client_secret\",this.clientSecret);reqParams.put(\"redirect_uri\",this.redirectURL);HttpResponse response=RequestHttp.postJSON(this.tokenURL,reqParams);Map<String,Object> resultMap=response.toMap();return (String)resultMap.get(\"access_token\");}public String getIdentity(String token){Map<String,Object> reqParams=new HashMap<String,Object>();Map<String,Object> reqHeaders=new HashMap<String,Object>();reqHeaders.put(\"Authorization\",\"Bearer \"+token);HttpResponse response=RequestHttp.postJSON(this.identityURL,reqParams,null,reqHeaders);Map<String,Object> resultMap=response.toMap();return (String)resultMap.get(this.identityProperty);}}\n```\n\nThe class declaration line, excluding the opening bracket '{', excluding dependencies, excluding methods and properties, excluding closing bracket '}'\n\n```\n","completion":"public class OAuth2ProviderHelper"}
{"prompt":"Extract from the following\n\njava code :\n```\npublic class OAuth2ProviderHelper{private String authorizationURL,scope,tokenURL,redirectURL,clientID,clientSecret,identityURL,identityProperty;public OAuth2ProviderHelper(Map<String,Object> params){this.authorizationURL=(String)params.get(\"authorizationURL\");this.scope=(String)params.get(\"scope\");this.tokenURL=(String)params.get(\"tokenURL\");this.redirectURL=(String)params.get(\"redirectURL\");this.clientID=(String)params.get(\"clientID\");this.clientSecret=(String)params.get(\"clientSecret\");this.identityURL=(String)params.get(\"identityURL\");this.identityProperty=(String)params.get(\"identityProperty\");if(this.identityProperty==null)this.identityProperty=\"email\";}public String getAuthorizationSessionUrl(){try{return this.authorizationURL+\"?client_id=\"+this.clientID+\"&redirect_uri=\"+URLEncoder.encode(this.redirectURL,\"UTF-8\")+\"&scope=\"+this.scope;}catch(UnsupportedEncodingException e){throw new RuntimeException(e);}}public String getValidAccessToken(String code){Map<String,Object> reqParams=new HashMap<String,Object>();reqParams.put(\"code\",code);reqParams.put(\"client_id\",this.clientID);reqParams.put(\"client_secret\",this.clientSecret);reqParams.put(\"redirect_uri\",this.redirectURL);HttpResponse response=RequestHttp.postJSON(this.tokenURL,reqParams);Map<String,Object> resultMap=response.toMap();return (String)resultMap.get(\"access_token\");}public String getIdentity(String token){Map<String,Object> reqParams=new HashMap<String,Object>();Map<String,Object> reqHeaders=new HashMap<String,Object>();reqHeaders.put(\"Authorization\",\"Bearer \"+token);HttpResponse response=RequestHttp.postJSON(this.identityURL,reqParams,null,reqHeaders);Map<String,Object> resultMap=response.toMap();return (String)resultMap.get(this.identityProperty);}}\n```\n\nThe all property declarations\n\n```\n","completion":"private String authorizationURL,scope,tokenURL,redirectURL,clientID,clientSecret,identityURL,identityProperty;\n```"}
